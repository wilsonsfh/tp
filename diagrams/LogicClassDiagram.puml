@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic as LogicPackage {

  package "Parser Classes" as ParserClasses {
    Class "<<interface>>\nParser" as Parser
    Class AddressBookParser
    Class TaskCommandParser
    Class FindCommandParser
    Class EditCommandParser
  }

  ' Abstract base
  Class "{abstract}\nCommand" as Command {
    +execute(): CommandResult throws CommandException
  }

  ' Command result
  Class CommandResult

  ' Logic interface and manager
  Class "<<interface>>\nLogic" as Logic
  Class LogicManager {
    +FILE_OPS_ERROR_FORMAT: String
    +FILE_OPS_PERMISSION_ERROR_FORMAT: String
    -model: Model
    -storage: Storage
    -addressBookParser: AddressBookParser
    -taskCommandParser: TaskCommandParser
  }

  ' Exception
  package Exception {
    Class CommandException {
      +CommandException(message: String)
      +CommandException(message: String, cause: Throwable)
    }
  }

  ' Concrete Command Classes
  Class AddCommand
  Class ClearCommand
  Class DeleteCommand
  Class DeleteTaskCommand
  Class EditCommand
  Class ExitCommand
  Class FindCommand
  Class HelpCommand
  Class ListCommand
  Class ListMemberTasksCommand
  Class ReportCommand
  Class SetDueDateCommand
  Class TaskCommand
  Class TaskStatusCommand

  ' Inheritance relationships
  AddCommand -up-|> Command
  ClearCommand -up-|> Command
  DeleteCommand -up-|> Command
  DeleteTaskCommand -up-|> Command
  EditCommand -up-|> Command
  ExitCommand -up-|> Command
  FindCommand -up-|> Command
  HelpCommand -up-|> Command
  ListCommand -up-|> Command
  ListMemberTasksCommand -up-|> Command
  ReportCommand -up-|> Command
  SetDueDateCommand -up-|> Command
  TaskCommand -up-|> Command
  TaskStatusCommand -up-|> Command

  ' Relationships
  LogicManager .right.|> Logic
  LogicManager -right-> "1" ParserClasses
  ParserClasses ..> AddCommand : <<create>>
  ParserClasses ..> TaskCommand : <<create>>
  ParserClasses ..> FindCommand : <<create>>
  ParserClasses ..> EditCommand : <<create>>

  LogicManager .left.> Command : <<call>>
  LogicManager --> Model
  LogicManager --> Storage
  Command .right.> Model
  Command .up.> CommandResult : <<create>>
  Command ..> CommandException : <<throws>>

  Logic ..> CommandResult
  LogicManager .down.> CommandResult

  ' Notes
  note right of TaskStatusCommand
    Includes task-related commands:
    TaskCommand, DeleteTaskCommand,
    SetDueDateCommand, TaskStatusCommand,
    ListMemberTasksCommand
  end note
}

@enduml
